"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os  # This is a python module that kind of allows us access to the path or root directory or the directory system in your operating system.
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2-1&y3ldsni+65%49^pxl@@ld^(2pyb*xc10exi4yh2y1&1$1%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['yourdomain.com', '127.0.0.1'] #when you implement (deploy) your application, you're gonna need to change the 'ALLOWED_HOSTS'. For example if you were to deploy your application onto a server and then you have a domain name associated to that server, you need to make sure that in Django in the 'ALLOWED_HOSTS' that domain name is in place, so that basically tells Django that this application of Django is accessible on that domain name.


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',  #That is a reason why you have a session database, when you initially migrate your Django project, because we've got installed by default the sessions module.
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',
    'basket',
    'account',
    'checkout',
    'orders',
    # 'azbankgateways',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', #This also needs to be available for sessions to work.
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], #It describes the directory for the templates.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'store.views.categories',  #This means that for every page that we view, we have access to 'categories' view (so we can access the 'Category' table data through the keyword 'categories').
                'store.context_processors.categories', #after adding 'context_processors.py' file in 'store' app we turn the above line into a comment and replace it with this line.
                'basket.context_processors.basket', #now we have that available within each template. 
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




# AZ_IRANIAN_BANK_GATEWAYS = {
#     "GATEWAYS": {
#         "ZARINPAL": {
#             "MERCHANT_CODE": "58aed33f-be8d-43f0-be0e-261326de14f2",
#             "SANDBOX": 1,  # 0 disable, 1 active
#         },
#     },
#     "IS_SAMPLE_FORM_ENABLE": True,  # اختیاری و پیش فرض غیر فعال است
#     "DEFAULT": "ZARINPAL",
#     "CURRENCY": "IRT",  # اختیاری
#     "TRACKING_CODE_QUERY_PARAM": "tc",  # اختیاری
#     "TRACKING_CODE_LENGTH": 16, #شماره تراکنش # اختیاری 
#     "SETTING_VALUE_READER_CLASS": "azbankgateways.readers.DefaultReader",  # اختیاری
#     "BANK_PRIORITIES": [
#     #     'ZARINPAL',
#     #     # and so on ...
#     ],  # اختیاری
#     # "IS_SAFE_GET_GATEWAY_PAYMENT": False,  # اختیاری، بهتر است True بزارید.
#     # "CUSTOM_APP": None,  # اختیاری
# }

# Disable secure SSL redirect in development
SECURE_SSL_REDIRECT = False

# Other security settings that may enforce HTTPS
SECURE_PROXY_SSL_HEADER = None  # Disable if set
SESSION_COOKIE_SECURE = False  # Disable in development
CSRF_COOKIE_SECURE = False  # Disable in development


SANDBOX = True
MERCHANT = '31635d35-c719-497e-8657-543c3484a09d'


# Basket session ID
BASKET_SESSION_ID = 'skey'







# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MEDIA_URL = '/media/' #by this line, any media files can be accessed via URLs that start with '/media/'.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/') #we're utilizing 'MEDIA_ROOT' while we're in development environment. we're gonna connect our base directory to the 'media' file to build the actual link to the 'media' folder so that Django can access the folder. by this line, all uploaded files will be saved in a directory named 'media' within your project's base directory.
#these are two settings (the above two lines) that we need to configure to allow our 'media' folder to work locally.

# Custom user model
#by the three following lines we're telling django that we're utilizing this new user model called 'UserBase' instead of django default user model called 'User'.
AUTH_USER_MODEL = 'account.UserBase'
LOGIN_REDIRECT_URL = '/account/dashboard'
LOGIN_URL = '/account/login/'

# Email setting
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' 
#When you set 'EMAIL_BACKEND' to 'django.core.mail.backends.console.EmailBackend', you are instructing Django to use the console email backend. 
# This backend does not send real emails; instead, it outputs the email content to the console (standard output).
#This is particularly useful during development and testing because it allows developers to see the email content that would have been sent without actually sending any emails.